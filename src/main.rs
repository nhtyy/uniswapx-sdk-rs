pub mod api;
pub mod contracts;
pub mod order;
pub mod server;
pub mod subscriber;

use api::uniswap::{ApiParams, OrderClient};
use ethers::abi::AbiDecode;
use order::Order;

#[tokio::main]
async fn main() {
    let client = OrderClient::new();

    // let mut res = client
    //     .get_orders(ApiParams {
    //         limit: 10,
    //         chain_id: 1,
    //         order_status: api::uniswap::response_types::OrderStatus::Open,
    //     })
    //     .await
    //     .unwrap();

    // println!("{:#?}", res);

    // let order = Order::try_from(res.orders.pop().unwrap()).unwrap();

    let order_hex = "0x000000000000000000000000000000000000000000000000000000000000002000000000000000000000000000000000000000000000000000000000000000e00000000000000000000000000000000000000000000000000000000000000011000000000000000000000000000000000000000000000000000000000000001200000000000000000000000000000000000000000000000000000000000000060000000000000000000000000000000000000000000000000000000000000007000000000000000000000000000000000000000000000000000000000000000800000000000000000000000000000000000000000000000000000000000001e00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000030000000000000000000000000000000000000000000000000000000000000004000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000c00000000000000000000000000000000000000000000000000000000000000004deadbeef0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000013000000000000000000000000000000000000000000000000000000000000000e000000000000000000000000000000000000000000000000000000000000000f0000000000000000000000000000000000000000000000000000000000000016";
    let order = crate::contracts::internal::DutchOrder::decode_hex(order_hex).unwrap();
}
